import { createAsyncThunk } from "@reduxjs/toolkit";
import api from "../axiosInstance"; // –ò—Å–ø–æ–ª—å–∑—É–µ–º api –≤–º–µ—Å—Ç–æ axios

// üìå GET: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã
export const fetchOrders = createAsyncThunk(
  "orders/fetchAll",
  async (_, { rejectWithValue }) => {
    try {
      const response = await api.get("/orders"); // –ò—Å–ø–æ–ª—å–∑—É–µ–º api
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤");
    }
  }
);

// üìå POST: –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑
export const addOrder = createAsyncThunk(
  "orders/add",
  async (orderData, { rejectWithValue }) => {
    try {
      const response = await api.post("/orders", orderData); // api –≤–º–µ—Å—Ç–æ axios
      return response.data;
    } catch (error) {
      return rejectWithValue(
        error.response?.data || "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"
      );
    }
  }
);

// üìå PUT: –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑
export const updateOrder = createAsyncThunk(
  "orders/update",
  async ({ id, orderData }, { rejectWithValue }) => {
    try {
      const response = await api.put(`/orders/${id}`, orderData); // api –≤–º–µ—Å—Ç–æ axios
      return response.data;
    } catch (error) {
      return rejectWithValue(
        error.response?.data || "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"
      );
    }
  }
);

// üìå DELETE: –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑
export const deleteOrder = createAsyncThunk(
  "orders/delete",
  async (id, { rejectWithValue }) => {
    try {
      await api.delete(`/orders/${id}`); // api –≤–º–µ—Å—Ç–æ axios
      return id;
    } catch (error) {
      return rejectWithValue(error.response?.data || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞");
    }
  }
);
