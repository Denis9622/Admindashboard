import { createAsyncThunk } from "@reduxjs/toolkit";
import axios from "axios";

axios.defaults.baseURL = "http://localhost:3000/api";

// üìå **–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏**
export const fetchStatistics = createAsyncThunk(
  "dashboard/fetchStatistics",
  async (_, { rejectWithValue }) => {
    try {
      const response = await axios.get("/dashboard/statistics");
      return response.data;
    } catch (error) {
      return rejectWithValue(
        error.response.data || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
      );
    }
  }
);

// üìå **–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤**
export const fetchRecentCustomers = createAsyncThunk(
  "dashboard/fetchRecentCustomers",
  async (_, { rejectWithValue }) => {
    try {
      const response = await axios.get("/dashboard/recent-customers");
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response.data || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤");
    }
  }
);

// üìå **–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤**
export const fetchIncomeExpenses = createAsyncThunk(
  "dashboard/fetchIncomeExpenses",
  async (_, { rejectWithValue }) => {
    try {
      const response = await axios.get("/dashboard/income-expenses");
      console.log("–û—Ç–≤–µ—Ç –æ—Ç API:", response.data); // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
      return response.data;
    } catch (error) {
      return rejectWithValue(
        error.response?.data || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"
      );
    }
  }
);




// üìå **–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∑–∞—Ç—Ä–∞—Ç–∞–º–∏**
export const fetchCustomersWithSpent = createAsyncThunk(
  "dashboard/fetchCustomersWithSpent",
  async (_, { rejectWithValue }) => {
    try {
      console.log("Fetching customers with spent..."); // –õ–æ–≥ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º
      const response = await axios.get("/dashboard/customers-with-spent");
      console.log("Customers with Spent:", response.data); // –õ–æ–≥ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
      return response.data;
    } catch (error) {
      console.log("Fetch customers with spent error:", error); // –õ–æ–≥ –æ—à–∏–±–æ–∫
      return rejectWithValue(
        error.response?.data || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∑–∞—Ç—Ä–∞—Ç–∞–º–∏"
      );
    }
  }
);
